version: "3.5"

services:

  prometheus:
    image: prom/prometheus:v2.1.0
    volumes:
      - ./prometheus/:/etc/prometheus/
      - ./data/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - portainer:portainer
    depends_on:
      - portainer
    restart: always

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    restart: always

  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./data/alertmanager/:/etc/alertmanager/
    restart: always
    command:
      - '--storage.path=/alertmanager'

  grafana:
    image: "grafana/grafana:${GRAFANA_TAG}"
    container_name: "${ML_PIPELINE_PROJECT_NAME}_grafana"
    user: "472"
    hostname: grafana
    restart: always
    stop_grace_period: 60s
    user: "0"
    ports:
      - "${GRAFANA_PORT}:3000"
    environment:
      GF_INSTALL_PLUGINS: $GF_INSTALL_PLUGINS
    volumes:
      - ./data/grafana:/var/lib/grafana

  portainer:
    image: "portainer/portainer:${PORTAINER_TAG}"
    container_name: "${ML_PIPELINE_PROJECT_NAME}_portainer"
    command: --no-auth -H unix:///var/run/docker.sock
    stop_grace_period: 60s
    restart: always
    ports:
      - ${PORTAINER_PORT}:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  default:
      name: ml_pipeline